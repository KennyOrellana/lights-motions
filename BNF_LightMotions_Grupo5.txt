# Universidad Nacional Autónoma de Honduras
# Lenguajes de Programación
# 2021 - II PAC - Grupo 5

# Lights Motions

<Programa> ::= INICIO <Instruccion> FINAL

<Instruccion> ::= <ListaDeFunciones> | <Sentencia> | <Instruccion><ListaDeFunciones> | <Instruccion><Sentencia>

<ListaDeFunciones> ::= <Función> | <ListaDeFunciones><Función>
<Función> ::= FUNCION<Variable>(<ListaDeParámetros>)<Sentencia>FIN
<ListaDeParámetros> ::= <ListaDeVariables> | E
<ListaDeVariables> ::= <Variable> | <ListaDeVariables > , <Variable>

<Variable> ::= <Letra> | <Variable><Alfanumerico>
<Alfanumerico> ::= < Letra> | <Dígito>
<Letra> ::= a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z

<Cadena> ::= <Caracter> | <Cadena><Caracter>
<Caracter> ::= <Digito> | <Letra> |  | - | _ | ( | ) | [ | ] | { | } | # | ? | ¿ | ¡ | ! | . | : | ; | , | ‘ | ` | ´ | ¨ |& | $ | ¬ | ~ | ^ | \ |° | = | <OperadorBinario> | \n | \r |

<Numero> ::= <Signo><Entero> | <Signo><Flotante>
<Entero> ::= <Digito> | <Entero><Digito>
<Flotante> ::= <Entero> . <Entero>
<Dígito> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
<Signo> ::= - | + | E

<Booleano> = falso | FALSO | verdadero | VERDADERO

<Color> ::= RGB(<Byte>,<Byte>,<Byte>)
<Byte> ::= 0 .. 255

<Documento> ::= DOCUMENTO (<DireccionDocumento> | <DireccionDocumento>, <ContenidoDocumento>)
<DireccionDocumento> ::=<Ruta><Cadena> | <Ruta><Cadena><Ruta>
<Ruta> ::= <cadena>/<Cadena>
<ContenidoDocumento> ::= <Cadena>
<EjecutarDocumento> :: = RUN <DireccionDocumento>

<Sentencia> ::= <SentenciaAsignación> | <SentenciaEscritura> | <SentenciaLectura> |<SentenciaSalto> | <SentenciaRetorno> | <SentenciaPausa> | <SentenciaTerminar> | <SentenciaCondicional> | <SentenciaWhile> | <SentenciaDoWhile> | <SentenciaFor> | <SentenciaTryCatch> | <Bloque>

<SentenciaAsignación> ::= <Variable> = <Expresion>

<Expresion> ::= <Expresion><OperadorBinario><Expresion> | <OperadorUnario><Expresion> | <Expresion><OperadorLogico><Expresion> | <Variable> | <Numero> | <Cadena> |  (<Expresion>) | <Variable> (<ListaDeArgumentos>)

<OperadorBinario> ::= + |  - | * |  / | %
<OperadorUnario> ::= !
<OperadorLogico> ::= Y | O | != | == | > | < | <= | >=

<ListaDeArgumentos> ::=<ListaDeExpresiones> | E
<ListaDeExpresiones> ::=<Expresión> | <Expresion> , <ListaDeExpresiones>

<SentenciaEscritura> ::= IMPRIMIR <ListaDeEscritura> 
<ListaDeEscritura> ::= <ElementoEscritura> | <ListaDeEscritura> , <ElementoEscritura>
<ElementoEscritura> ::= <Expresión> | “<Cadena>” | <Documento>

<SentenciaLectura> ::= LEER <ElementoLectura> 
<ElementoLectura> ::= <Cadena> | <Numero> | <DireccionDocumento>


<SentenciaRetorno> ::= RETORNAR <Expresion>
<SentenciaSalto> ::= CONTINUAR
<SentenciaPausa> ::= PAUSA
<SentenciaTerminar> ::= EXIT

<SentenciaCondicional> ::= SI<Expresión>ENTONCES <Sentencia>FIN | SI<Expresión>ENTONCES<Sentencia>SINO<Sentencia>FIN

<SentenciaWhile> ::= MIENTRAS (<Expresión>) HACER<Sentencia>FIN
<SentenciaDoWhile> ::= HACER<Sentencia>MIENTRAS (<Expresion>);
<SentenciaFor> ::= PARA(<SentenciaAsignacion>; <Expresión>; <Variable>)<Sentencia>
<SentenciaTryCatch> ::= INTENTAR <Sentencia> CAPTURAR <Sentencia> FIN

<Bloque> ::= [{]<ListaDeDeclaraciones><ListaDeSentencias>[}]

<ListaDeDeclaraciones> ::=<Declaración><ListaDeDeclaraciones> | E
<Declaración> ::= DECLARAR <ListaDeVariables>
<ListaDeSentencias> ::= <Sentencia > | <ListaDeSentencias><Sentencia>